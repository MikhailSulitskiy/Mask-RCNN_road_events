# -*- coding: utf-8 -*-
"""roadEvents.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nr9UIrVeJJwhPTHXpz3Nje8BmJJ1nzN5
"""

pip install pyTelegramBotAPI

import telebot
import random
TOKEN = '1814029509:AAF0oAHJ5PDBdg_MyN1J9ZyP3zqS0uL5vMY'
from telebot import types

bot = telebot.TeleBot(TOKEN)
 
@bot.message_handler(commands=['start'])
def welcome(message):
 
    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("Выбрать участок")
    item2 = types.KeyboardButton("Выбрать Дорожные ситуации")
    markup.add(item1, item2)
 
    bot.send_message(message.chat.id, "Добро пожаловать, {0.first_name}!\n<b>{1.first_name}</b>, бот созданный для информирования автомобилистов о дорожных ситуациях.".format(message.from_user, bot.get_me()),
        parse_mode='html', reply_markup=markup)
 
@bot.message_handler(content_types=['text'])
def info(message):
    if message.chat.type == 'private':
        if message.text == 'Выбрать участок':
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("ул. 30-летия Победы - ул. Константина Симонова", callback_data='simon')
            item2 = types.InlineKeyboardButton("Дзержинский, ул. им. Константина Симонова - ул. 8-й Воздушной Армии", callback_data='dj')
            markup.add(item1, item2)
            bot.send_message(message.chat.id, 'Выберите участок', reply_markup=markup)

        elif message.text == 'Выбрать Дорожные ситуации':
            markup = types.InlineKeyboardMarkup(row_width=3)
            item1 = types.InlineKeyboardButton("ДТП", callback_data='dtp')
            item2 = types.InlineKeyboardButton("Затор на дороге", callback_data='zator')
            item3 = types.InlineKeyboardButton("Человек на дорожном полотне", callback_data='people')
            markup.add(item1, item2, item3)
            bot.send_message(message.chat.id, 'Выберите Дорожное событие', reply_markup=markup)   
        
        elif message.text == '-send':
            photo = open('/content/people.jpg', 'rb')
            bot.send_photo(message.chat.id, photo)
            bot.send_message(message.chat.id, 'ул. 30-летия Победы - ул. Константина Симонова\nВыявленная дорожная ситуация - Человек на дорожном полотне\nВремя: 15:48:22')

        else:
            bot.send_message(message.chat.id, 'Я не знаю что ответить')
 
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'simon':
                bot.send_message(call.message.chat.id, 'Теперь Вам будет поступать информация по участку: ул. 30-летия Победы - ул. Константина Симонова')
                bot.send_message(call.message.chat.id, '_________________________________________')
            elif call.data == 'dj':
                bot.send_message(call.message.chat.id, 'Теперь Вам будет поступать информация по участку: Дзержинский, ул. им. Константина Симонова - ул. 8-й Воздушной Армии')
                bot.send_message(call.message.chat.id, '_________________________________________')
            elif call.data == 'dtp':
                bot.send_message(call.message.chat.id, 'Теперь Вам будет поступать информация о ДТП на выбранном вами участке')
                bot.send_message(call.message.chat.id, '_________________________________________')
            elif call.data == 'zator':
                bot.send_message(call.message.chat.id, 'Теперь Вам будет поступать информация о Заторах на выбранном вами участке')
                bot.send_message(call.message.chat.id, '_________________________________________')
            elif call.data == 'people':
                bot.send_message(call.message.chat.id, 'Теперь Вам будет поступать информация о Людях на дорожном полотне на выбранном вами участке')
                bot.send_message(call.message.chat.id, '_________________________________________')
            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="_________________________________________ ",
                reply_markup=None)
 
            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=True,
                text="Информация успешно дополнена")
 
    except Exception as e:
        print(repr(e))
 
# RUN
bot.polling(none_stop=True)